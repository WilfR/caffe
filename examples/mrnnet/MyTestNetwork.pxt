# based on imagenet network

name: "MyTestMRNN"

layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "EqualAugmentedMeanImage.bin"
    # scale: 0.00390625
  }

  data_param {
    source: "EqualAugmentedTrainLevelDB"
    batch_size: 64
    backend: LEVELDB
  }
}


layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "EqualAugmentedMeanImage.bin"
    # scale: 0.00390625
  }
  data_param {
    source: "EqualAugmentedTestLevelDB"
    batch_size: 64
    backend: LEVELDB
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
  }
}

### layer {
###   name: "pool1"
###   type: "Pooling"
###   bottom: "conv1"
###   top: "pool1"
###   pooling_param {
###     pool: MAX
###     kernel_size: 3
###     stride: 2
###   }
### }
###
### layer {
###   name: "relu1"
###   type: "ReLU"
###   bottom: "pool1"
###   top: "pool1"
### }
###
### layer {
###   name: "conv2"
###   type: "Convolution"
###   bottom: "pool1"
###   top: "conv2"
###   param {
###     lr_mult: 1
###   }
###   param {
###     lr_mult: 2
###   }
###   convolution_param {
###     num_output: 32
###     pad: 2
###     kernel_size: 5
###     stride: 1
###   }
### }
###
### layer {
###   name: "relu2"
###   type: "ReLU"
###   bottom: "conv2"
###   top: "conv2"
### }
###
### layer {
###   name: "pool2"
###   type: "Pooling"
###   bottom: "conv2"
###   top: "pool2"
###   pooling_param {
###     pool: AVE
###     kernel_size: 3
###     stride: 2
###   }
### }
###
### layer {
###   name: "conv3"
###   type: "Convolution"
###   bottom: "pool2"
###   top: "conv3"
###   param {
###     lr_mult: 1
###   }
###   param {
###     lr_mult: 2
###   }
###   convolution_param {
###     num_output: 64
###     pad: 2
###     kernel_size: 5
###     stride: 1
###   }
### }
###
### layer {
###   name: "relu3"
###   type: "ReLU"
###   bottom: "conv3"
###   top: "conv3"
### }
###
### layer {
###   name: "pool3"
###   type: "Pooling"
###   bottom: "conv3"
###   top: "pool3"
###   pooling_param {
###     pool: AVE
###     kernel_size: 3
###     stride: 2
###   }
### }
layer {
  name: "ip1"
  type: "InnerProduct"
###   bottom: "pool3"
  bottom: "conv1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 64
  }
}

layer {
  name: "relu4"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}


layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}

layer {
   name: "confusion_matrix"
   type: "ConfusionMatrix"
   bottom: "ip2"
   bottom: "label"
   top: "confusion_matrix"
   include {
     phase: TEST
   }
}


layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}


