# based on imagenet network

name: "MyTestMRNN"

layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "EqualAugmentedMeanImage.bin"
    # scale: 0.00390625
  }

  data_param {
    source: "EqualAugmentedTrainLevelDB"
    batch_size: 64
    backend: LEVELDB
  }
}

layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "EqualAugmentedMeanImage.bin"
    # scale: 0.00390625
  }
  data_param {
    source: "AugmentedOriginalLevelDB"
    batch_size: 90000
    backend: LEVELDB
  }
}

layer {
  name:   "flat",
  type:   "Flatten",
  bottom: "data",
  top:    "flat"
}


layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "flat"
  top: "ip1"
  inner_product_param {
    num_output: 8
  }
}


layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}

layer {
   name: "confusion_matrix"
   type: "ConfusionMatrix"
   bottom: "ip1"
   bottom: "label"
   top: "confusion_matrix"
   include {
     phase: TEST
   }
}


layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}


