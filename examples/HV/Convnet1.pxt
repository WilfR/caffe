name: "HVConvnet1"

layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
 transform_param {
      ### mean_file: "Label01MeanImage.bin"
      scale: 0.00390625
 }

  data_param {
    source: "Label01Shuffled"
    batch_size: 64
    backend: LEVELDB
  }
}

layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
transform_param {
       ### mean_file: "Label01MeanImage.bin"
       scale: 0.00390625
 }

  data_param {
    source: "Label01Test"
    batch_size: 64
    backend: LEVELDB
  }
}


### Input 32x32x1
### Output [(W+2P-F)/S]+1

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output : 50
    kernel_size: 5
    stride:      1
    pad:         2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "relu1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "relu1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}


layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.7
    }

  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip1"
  top: "relu2"
}



layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "relu2"
  bottom: "label"
  top: "accuracy"
}

layer {
   name: "confusion_matrix"
   type: "ConfusionMatrix"
   bottom: "relu2"
   bottom: "label"
   top: "confusion_matrix"
}


layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "relu2"
  bottom: "label"
  top: "loss"
}




